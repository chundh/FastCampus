@startuml

interface IFoo{
    + void method(); // public
}

abstract class Bar{
    + static String name;
    Foo foo;
    # int x; // protected
    ~ int y; // default
    - void method(String string); // private
}

class Qoo{
    Foo foo;
}

class Foo{
    int x;
    void methodA();
}

Foo -left|> IFoo
Bar -o Foo
Qoo -right* Foo

title Class Diagram Title

note bottom of Bar
  void method(String string){
    return string;
  }
end note

note bottom of Foo
    public : +
    protected : #
    default : ~
    private : -
    Foo는 Bar가 Aggregation한다.(Bar -o Foo)
    Foo는 Qoo가 Composition한다.(Qoo -* Foo)
    Foo는 IFOoo를 상속한다.(Foo -|> IFoo)
end note

@enduml